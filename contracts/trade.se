data owner 
data created
data state

data buyer
data seller
data registry
data amount
data expiry

# TODO:
# use substates for partial completion?
# check expiration first?

# Constants
# Use Macro's, a hack to save GAS

# INSURED_BUYER = 3000
# INSURED_SELLER = 3000
# INSURER_LIST = 4000

# State Constants
macro NEW():     0
macro FILLING(): 1
macro WAITING(): 2
# COMPLETED_BUYER
# COMPLETED_SELLER
# COMPLETED [END]
# FAILED [END]
macro EXPIRED(): 7
# CANCELLED [END]


def init():
    self.owner   = msg.sender
    self.created = block.timestamp
    self.state   = NEW()

def create(buyer, seller, registry, amount, expiry):
    if state == NEW() and msg.sender == self.owner:
        self.buyer      = buyer
        self.seller     = seller
        self.registry   = registry
        self.amount     = amount
        self.expiry     = expiry
        self.state      = FILLING()

def get():
    if block.timestamp >= self.expiry:
        # TODO handle expiration
        self.state = EXPIRED()
        return(0)

    elif self.state == FILLING():
        # buyer should pay escrow
        # buyer should add insurers
        # seller should add insurers
        # both buyer or seller can cancel
        return(0)

    elif self.state == WAITING():
        # both buyer and seller can complete
        # either buyer or seller can fail
        return(0)

def suicide():
    if self.state == NEW() and msg.sender == self.owner:
        suicide(msg.sender)