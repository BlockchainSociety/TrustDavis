# Trust Davis - trade contract
#
# - buyer
# - seller
# - amount
# - expiry
# - insurers (insured party, amount, fee)
# - outcome
# * contract will escrow the funds#

# TODO
# use substates for partial completion?
# check expiration first?

shared:
    CREATOR = 1000
    BUYER =  1001
    SELLER = 1002
    REGISTRY = 1003

    AMOUNT = 2000
    CREATED = 2001
    EXPIRY = 2002
    STATE = 2003

# states:
# new [start]
# filling
# waiting
# completed_buyer
# completed_seller
# completed [end]
# failed [end]
# expired [end]
# cancelled [end]

    INSURED_BUYER = 3000
    INSURED_SELLER = 3000
    INSURER_LIST = 4000

init:
    contract.storage[CREATOR] = msg.sender
    contract.storage[CREATED] = block.timestamp
    contract.storage[STATUS] = "new"

code:
    cmd = msg.data[0]
    state = contract.storage[STATE]


    if state == "new":
        if cmd == "suicide" and msg.sender == contract.storage[CREATOR]:
            suicide(msg.sender)

        elif cmd == "create" and msg.sender == contract.storage[CREATOR]:
            contract.storage[BUYER] = msg.data[1]
            contract.storage[SELLER] = msg.data[2]
            contract.storage[REGISTERY] = msg.data[3]
            contract.storage[AMOUNT] = msg.data[4]
            contract.storage[EXPIRY] = msg.data[5]
            contract.storage[STATE] = "filling"

    else:
        if block.timestamp >= contract.storage[EXPIRY]:
            # TODO handle expiration
            contract.storage[STATE] = "expired"
            return(0)
        elif state == "filling":
            # buyer should pay escrow
            # buyer should add insurers
            # seller should add insurers
            # both buyer or seller can cancel
            return(0)

        elif state == "waiting":
            # both buyer and seller can complete
            # either buyer or seller can fail
            return(0)
